// Generated by CoffeeScript 1.6.1
(function() {
  var Grams;

  Grams = (function() {

    function Grams(dom, tag, load) {
      this.dom = dom;
      this.tag = tag;
      this.load = load;
      this.cache = {};
      this.onLoaded();
    }

    Grams.prototype.url = function(count) {
      return 'https://api.instagram.com/v1/tags/' + this.tag + '/media/recent?callback=?&count=' + count;
    };

    Grams.prototype.refresh = function() {
      var access_parameters, count, me, token;
      this.onLoad();
      token = '34292689.017e6b1.9b93c3bdc8a9450f85caeb083155098e';
      access_parameters = {
        access_token: token
      };
      count = this.length() < 1 ? 20 : 4;
      me = this;
      return $.getJSON(this.url(count), access_parameters, function(response) {
        return me.onDataLoaded(response);
      });
    };

    Grams.prototype.onDataLoaded = function(response) {
      if (response.meta.code === 200) {
        return this.onSuccess(response);
      } else {
        return this.onError(response);
      }
    };

    Grams.prototype.onError = function(response) {
      var error;
      error = response.meta.error_message;
      return this.dom.append("Something happened, Instagram said: " + error);
    };

    Grams.prototype.onSuccess = function(response) {
      var id, key, photo, photos, result;
      photos = response.data;
      result = $("<div>");
      if (photos.length > 0) {
        for (key in photos) {
          photo = photos[key];
          id = photo.id;
          if (this.cache[id] === void 0) {
            photo = photo.images.low_resolution.url;
            this.cache[id] = "";
            photo = $("<img>", {
              src: photo
            });
            result.append(photo);
          }
        }
        this.dom.prepend(result);
      } else {
        response = {
          meta: {
            error_message: "Hmm. I couldn't find anything!"
          }
        };
        this.onError(response);
      }
      return this.onLoaded();
    };

    Grams.prototype.length = function() {
      var key, obj, size;
      size = 0;
      obj = this.cache;
      for (key in obj) {
        if (obj.hasOwnProperty(key)) {
          size++;
        }
      }
      return size;
    };

    Grams.prototype.onLoad = function() {
      return this.load.slideDown();
    };

    Grams.prototype.onLoaded = function() {
      return this.load.slideUp();
    };

    return Grams;

  })();

  $(document).ready(function() {
    var dom, gram, load, tag, time,
      _this = this;
    tag = "blandaful";
    dom = $('.js-grams');
    load = $('.js-load');
    time = 30000;
    gram = new Grams(dom, tag, load);
    $('.js-tag').text(tag);
    $('.js-refresh').bind('click', function(event) {
      gram.refresh();
      return $('.js-extra').fadeOut(800);
    });
    return setInterval((function() {
      if (gram.length() > 0) {
        return gram.refresh();
      }
    }), time);
  });

}).call(this);
